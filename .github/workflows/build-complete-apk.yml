name: Universal Soul AI - Complete Full Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-complete-apk:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip python3-venv python3-dev \
            git zip unzip wget curl \
            build-essential \
            libffi-dev libssl-dev autoconf automake libtool pkg-config \
            zlib1g-dev libjpeg-dev \
            libfreetype6-dev

      - name: Setup Android SDK (Complete)
        run: |
          mkdir -p "$HOME/android-sdk"
          cd "$HOME/android-sdk"

          wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip -q commandlinetools-linux-8512546_latest.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true

          export ANDROID_HOME="$HOME/android-sdk"
          export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"
          echo "ANDROID_HOME=$HOME/android-sdk" >> "$GITHUB_ENV"
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "$HOME/android-sdk/platform-tools" >> "$GITHUB_PATH"

          yes | sdkmanager --licenses || true

          sdkmanager "platforms;android-31" "build-tools;31.0.0" "platform-tools"
          sdkmanager "ndk;25.2.9519653"

      - name: Warm caches (SDK and pip deps)
        working-directory: android_overlay
        run: |
          echo "Warming caches to reduce first-time downloads..."

          python3 -m venv warmenv
          source warmenv/bin/activate

          pip install --upgrade pip setuptools wheel
          pip install buildozer==1.5.0 python-for-android==2024.1.21

          export ANDROID_HOME="$HOME/android-sdk"
          export ANDROID_SDK_ROOT="$HOME/android-sdk"
          export ANDROIDSDK="$HOME/android-sdk"
          export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"

          # Accept licenses and prefetch common SDK extras used by Gradle
          yes | sdkmanager --licenses || true
          sdkmanager "extras;google;m2repository" "extras;android;m2repository" || true

          # Prefetch PyPI wheels/sdists for app requirements into the pip cache
          REQS_LINE=$(grep -E '^[[:space:]]*requirements[[:space:]]*=' buildozer.spec | head -n1 | sed -E 's/^[[:space:]]*requirements[[:space:]]*=[[:space:]]*//')
          echo "$REQS_LINE" | tr ',' '\n' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' | sed '/^$/d' > p4a-reqs.txt
          echo "Resolved p4a requirements:"; cat p4a-reqs.txt || true
          mkdir -p "$HOME/.cache/pip"
          pip download -r p4a-reqs.txt --dest "$HOME/.cache/pip" || true

          # Touch p4a/buildozer so .buildozer gets initialized without a full build
          buildozer version || true
          buildozer android p4a -- recipes || true

      - name: Build Complete APK with Buildozer
        working-directory: android_overlay
        run: |
          echo "Starting Universal Soul AI complete build..."

          python3 -m venv buildenv
          source buildenv/bin/activate

          pip install --upgrade pip setuptools wheel
          pip install buildozer==1.5.0 cython==0.29.33 python-for-android==2024.1.21

          export ANDROID_HOME="$HOME/android-sdk"
          export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"
          export ANDROID_SDK_ROOT="$HOME/android-sdk"
          export ANDROIDSDK="$HOME/android-sdk"
          export ANDROIDAPI=31
          export ANDROIDNDK="$HOME/android-sdk/ndk/25.2.9519653"
          export NDKAPI=23

          echo "=== Build Environment ==="
          python --version
          buildozer version
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROIDNDK: $ANDROIDNDK"
          java -version || true

          echo "Preserving .buildozer cache to leverage warmed downloads."

          echo "Building APK with retries..."
          attempts=0
          until [ $attempts -ge 3 ]
          do
            buildozer android debug --verbose && break
            attempts=$((attempts+1))
            echo "Build attempt $attempts failed; retrying in 20 seconds..."
            sleep 20
          done
          if [ $attempts -ge 3 ]; then
            echo "Build failed after 3 attempts"
            exit 1
          fi

          echo "Build completed!"

      - name: List build outputs
        run: |
          echo "=== Searching for APK files ==="
          find android_overlay -name "*.apk" -type f -exec ls -lh {} \; || echo "No APK files found"

          echo "=== Build directory contents ==="
          ls -la android_overlay/bin/ 2>/dev/null || echo "No bin directory"

          echo "=== Buildozer directory contents ==="
          find android_overlay/.buildozer -name "*.apk" -type f -exec ls -lh {} \; 2>/dev/null || echo "No APK in .buildozer"

          echo "=== All APK files in project ==="
          find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found anywhere"

      - name: Upload Complete APK Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: universal-soul-ai-complete-debug-apk
          path: |
            android_overlay/bin/*.apk
            android_overlay/.buildozer/android/platform/build-*/dists/*/bin/*.apk
            android_overlay/.buildozer/android/platform/build-*/dists/*/build/outputs/apk/debug/*.apk
            android_overlay/.buildozer/android/logs/**
          retention-days: 30

      - name: Build Summary
        if: always()
        run: |
          echo "=== Universal Soul AI Build Summary ==="
          echo "Platform: Android"
          echo "Target API: 31"
          echo "Build Type: Debug APK"
          echo "Features: Complete (Voice, Gesture, Overlay, Context)"
          echo "UI Framework: KivyMD + Kivy fallbacks"
          echo "Privacy: Local processing enabled"
          if find android_overlay -name "*.apk" -type f | grep -q .; then
            echo "BUILD SUCCESS: APK generated!"
            echo "Download artifact: universal-soul-ai-complete-debug-apk"
          else
            echo "BUILD INCOMPLETE: No APK found"
            echo "Check logs above for errors"
          fi