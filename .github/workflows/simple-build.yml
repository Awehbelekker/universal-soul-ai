name: 🚀 Universal Soul AI - Simple Build

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'minimal'
        type: choice
        options:
        - minimal
        - debug
      android_api:
        description: 'Android API Level'
        required: true
        default: '29'
        type: choice
        options:
        - '29'
        - '30'
        - '31'

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3
      
    - name: 🐍 Setup Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: ☕ Setup Java 8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'
        
    - name: 🔧 Install Minimal Dependencies
      run: |
        echo "🔄 Updating package lists..."
        sudo apt-get update -y
        
        echo "📦 Installing essential packages only..."
        sudo apt-get install -y \
          git \
          python3-pip \
          python3-dev \
          build-essential \
          libffi-dev \
          libssl-dev \
          zlib1g-dev \
          wget \
          unzip
          
        echo "✅ Essential dependencies installed"
        
    - name: 🏗️ Install Python Build Tools
      run: |
        echo "🔄 Upgrading pip..."
        python -m pip install --upgrade pip
        
        echo "📦 Installing buildozer..."
        pip install buildozer
        
        echo "📦 Installing cython..."
        pip install "cython<3.0"
        
        echo "📦 Installing kivy..."
        pip install kivy==2.1.0
        
        echo "✅ Python build tools installed"
        
    - name: 📱 Create Minimal App
      run: |
        echo "🏗️ Setting up build directory..."
        cd android_overlay
        
        echo "📝 Creating ultra-minimal buildozer.spec..."
        cat > buildozer.spec << 'EOF'
        [app]
        title = Universal Soul AI
        package.name = universalsoulai
        package.domain = com.universalsoul
        source.dir = .
        source.include_exts = py
        version = 0.1
        requirements = python3,kivy

        [buildozer]
        log_level = 2

        android.permissions = INTERNET
        android.api = ${{ github.event.inputs.android_api }}
        android.minapi = 21
        android.ndk = 19b
        android.sdk = ${{ github.event.inputs.android_api }}
        android.accept_sdk_license = True
        android.gradle_dependencies = 
        android.add_src = 
        EOF
        
        echo "📱 Creating simple main.py..."
        cat > main.py << 'EOF'
        from kivy.app import App
        from kivy.uix.label import Label
        from kivy.uix.boxlayout import BoxLayout

        class UniversalSoulApp(App):
            def build(self):
                layout = BoxLayout(orientation='vertical', padding=20, spacing=20)
                
                title = Label(
                    text='Universal Soul AI',
                    font_size='24sp',
                    size_hint=(1, 0.3)
                )
                
                content = Label(
                    text='Welcome to Universal Soul AI\n\nThis is a minimal Android app.\n\nMore features coming soon!',
                    font_size='16sp',
                    text_size=(None, None),
                    halign='center',
                    valign='middle'
                )
                
                layout.add_widget(title)
                layout.add_widget(content)
                
                return layout

        if __name__ == '__main__':
            UniversalSoulApp().run()
        EOF
        
        echo "✅ App files created"
        
    - name: 🏗️ Build APK
      run: |
        cd android_overlay
        echo "🚀 Starting buildozer build..."
        buildozer android debug --verbose
        
    - name: 📦 Upload APK Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: universal-soul-ai-${{ github.event.inputs.build_type }}-apk
        path: |
          android_overlay/bin/*.apk
          android_overlay/.buildozer/android/logs/
        retention-days: 30
        
    - name: 📋 Build Summary
      if: always()
      run: |
        echo "=== Build Summary ==="
        echo "Build Type: ${{ github.event.inputs.build_type }}"
        echo "Android API: ${{ github.event.inputs.android_api }}"
        
        if [ -f android_overlay/bin/*.apk ]; then
          echo "✅ APK Build: SUCCESS"
          ls -la android_overlay/bin/
        else
          echo "❌ APK Build: FAILED"
          echo "Checking for logs..."
          find android_overlay -name "*.log" -type f -exec echo "=== {} ===" \; -exec tail -20 {} \;
        fi